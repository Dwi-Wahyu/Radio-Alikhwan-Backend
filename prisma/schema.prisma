generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model artikel {
  id          String    @id @default(uuid())
  nomor       Int       @unique @default(autoincrement())
  title       String
  content     String    @db.LongText
  createdAt   DateTime  @default(now())
  tanggal     String?
  id_pengguna String?
  thumbnail   String?
  dislike     Int       @default(0)
  like        Int       @default(0)
  pengguna    pengguna? @relation(fields: [id_pengguna], references: [id])

  @@index([id_pengguna], map: "artikel_id_pengguna_fkey")
}

model komentar {
  id          String        @id @default(uuid())
  nama        String
  isi         String
  like        Int           @default(0)
  dislike     Int           @default(0)
  createdAt   DateTime      @default(now())
  subkomentar subkomentar[]
}

model galeri {
  id         String   @id @default(uuid())
  urutan     Int      @unique @default(autoincrement())
  path       String
  uploadedAt DateTime @default(now())
  tampilkan  Boolean  @default(false)
}

model struktur {
  id        String @id @default(uuid())
  urutan    Int    @unique @default(autoincrement())
  nama      String @unique
  gambar    String
  deskripsi String
}

model pengguna {
  id       String    @id @default(uuid())
  nomor    Int       @unique @default(autoincrement())
  username String    @unique
  password String    @unique
  artikel  artikel[]
}

model kata_sambutan {
  id      String @id @default(uuid())
  content String @db.Text
}

model program_acara {
  id        String   @id @default(uuid())
  judul     String   @unique
  mulai     String
  selesai   String
  startTime DateTime
}

model statistik {
  id             String           @id @default(uuid())
  nama_statistik String           @unique
  data           data_statistik[]
}

model data_statistik {
  id           String     @id @default(uuid())
  kategori     String     @unique
  persentase   String
  id_statistik String?
  statistik    statistik? @relation(fields: [id_statistik], references: [id])

  @@index([id_statistik], map: "data_statistik_id_statistik_fkey")
}

model subkomentar {
  id          String    @id
  nama        String
  isi         String
  like        Int       @default(0)
  dislike     Int       @default(0)
  createdAt   DateTime  @default(now())
  id_komentar String?
  replyTo     String
  komentar    komentar? @relation(fields: [id_komentar], references: [id])

  @@index([id_komentar], map: "subkomentar_id_komentar_fkey")
}
